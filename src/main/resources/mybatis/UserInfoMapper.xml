<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ichaoge.pet.dao.mapper.UserInfoMapper">
  <resultMap id="BaseResultMap" type="com.ichaoge.pet.domain.entity.UserInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="birth_date" jdbcType="TIMESTAMP" property="birthDate" />
    <result column="id_card" jdbcType="VARCHAR" property="idCard" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="mark" jdbcType="INTEGER" property="mark" />
    <result column="school" jdbcType="VARCHAR" property="school" />
    <result column="blood_type" jdbcType="VARCHAR" property="bloodType" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="creator" jdbcType="BIGINT" property="creator" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="modified" jdbcType="TIMESTAMP" property="modified" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, sex, real_name, birth_date, id_card, address, mark, school, blood_type, 
    status, creator, created, modified
  </sql>
  <select id="selectByExample" parameterType="com.ichaoge.pet.domain.entity.UserInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ichaoge.pet.domain.entity.UserInfoExample">
    delete from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ichaoge.pet.domain.entity.UserInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_info (user_id, sex, real_name, 
      birth_date, id_card, address, 
      mark, school, blood_type, 
      status, creator, created, 
      modified)
    values (#{userId,jdbcType=BIGINT}, #{sex,jdbcType=INTEGER}, #{realName,jdbcType=VARCHAR}, 
      #{birthDate,jdbcType=TIMESTAMP}, #{idCard,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{mark,jdbcType=INTEGER}, #{school,jdbcType=VARCHAR}, #{bloodType,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{creator,jdbcType=BIGINT}, #{created,jdbcType=TIMESTAMP}, 
      #{modified,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ichaoge.pet.domain.entity.UserInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="birthDate != null">
        birth_date,
      </if>
      <if test="idCard != null">
        id_card,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="mark != null">
        mark,
      </if>
      <if test="school != null">
        school,
      </if>
      <if test="bloodType != null">
        blood_type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="modified != null">
        modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="birthDate != null">
        #{birthDate,jdbcType=TIMESTAMP},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="mark != null">
        #{mark,jdbcType=INTEGER},
      </if>
      <if test="school != null">
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="bloodType != null">
        #{bloodType,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=BIGINT},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="modified != null">
        #{modified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ichaoge.pet.domain.entity.UserInfoExample" resultType="java.lang.Integer">
    select count(*) from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.realName != null">
        real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.birthDate != null">
        birth_date = #{record.birthDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.idCard != null">
        id_card = #{record.idCard,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.mark != null">
        mark = #{record.mark,jdbcType=INTEGER},
      </if>
      <if test="record.school != null">
        school = #{record.school,jdbcType=VARCHAR},
      </if>
      <if test="record.bloodType != null">
        blood_type = #{record.bloodType,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=BIGINT},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modified != null">
        modified = #{record.modified,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_info
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      sex = #{record.sex,jdbcType=INTEGER},
      real_name = #{record.realName,jdbcType=VARCHAR},
      birth_date = #{record.birthDate,jdbcType=TIMESTAMP},
      id_card = #{record.idCard,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      mark = #{record.mark,jdbcType=INTEGER},
      school = #{record.school,jdbcType=VARCHAR},
      blood_type = #{record.bloodType,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      creator = #{record.creator,jdbcType=BIGINT},
      created = #{record.created,jdbcType=TIMESTAMP},
      modified = #{record.modified,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ichaoge.pet.domain.entity.UserInfo">
    update user_info
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="birthDate != null">
        birth_date = #{birthDate,jdbcType=TIMESTAMP},
      </if>
      <if test="idCard != null">
        id_card = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="mark != null">
        mark = #{mark,jdbcType=INTEGER},
      </if>
      <if test="school != null">
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="bloodType != null">
        blood_type = #{bloodType,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=BIGINT},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="modified != null">
        modified = #{modified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ichaoge.pet.domain.entity.UserInfo">
    update user_info
    set user_id = #{userId,jdbcType=BIGINT},
      sex = #{sex,jdbcType=INTEGER},
      real_name = #{realName,jdbcType=VARCHAR},
      birth_date = #{birthDate,jdbcType=TIMESTAMP},
      id_card = #{idCard,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      mark = #{mark,jdbcType=INTEGER},
      school = #{school,jdbcType=VARCHAR},
      blood_type = #{bloodType,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      creator = #{creator,jdbcType=BIGINT},
      created = #{created,jdbcType=TIMESTAMP},
      modified = #{modified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.ichaoge.pet.domain.entity.UserInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="birth_date" jdbcType="TIMESTAMP" property="birthDate" />
    <result column="id_card" jdbcType="VARCHAR" property="idCard" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="mark" jdbcType="INTEGER" property="mark" />
    <result column="school" jdbcType="VARCHAR" property="school" />
    <result column="blood_type" jdbcType="VARCHAR" property="bloodType" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="creator" jdbcType="BIGINT" property="creator" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="modified" jdbcType="TIMESTAMP" property="modified" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, sex, real_name, birth_date, id_card, address, mark, school, blood_type, 
    status, creator, created, modified
  </sql>
  <select id="selectByExample" parameterType="com.ichaoge.pet.domain.entity.UserInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ichaoge.pet.domain.entity.UserInfoExample">
    delete from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ichaoge.pet.domain.entity.UserInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_info (user_id, sex, real_name, 
      birth_date, id_card, address, 
      mark, school, blood_type, 
      status, creator, created, 
      modified)
    values (#{userId,jdbcType=BIGINT}, #{sex,jdbcType=INTEGER}, #{realName,jdbcType=VARCHAR}, 
      #{birthDate,jdbcType=TIMESTAMP}, #{idCard,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{mark,jdbcType=INTEGER}, #{school,jdbcType=VARCHAR}, #{bloodType,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{creator,jdbcType=BIGINT}, #{created,jdbcType=TIMESTAMP}, 
      #{modified,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ichaoge.pet.domain.entity.UserInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="birthDate != null">
        birth_date,
      </if>
      <if test="idCard != null">
        id_card,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="mark != null">
        mark,
      </if>
      <if test="school != null">
        school,
      </if>
      <if test="bloodType != null">
        blood_type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="modified != null">
        modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="birthDate != null">
        #{birthDate,jdbcType=TIMESTAMP},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="mark != null">
        #{mark,jdbcType=INTEGER},
      </if>
      <if test="school != null">
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="bloodType != null">
        #{bloodType,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=BIGINT},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="modified != null">
        #{modified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ichaoge.pet.domain.entity.UserInfoExample" resultType="java.lang.Integer">
    select count(*) from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.realName != null">
        real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.birthDate != null">
        birth_date = #{record.birthDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.idCard != null">
        id_card = #{record.idCard,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.mark != null">
        mark = #{record.mark,jdbcType=INTEGER},
      </if>
      <if test="record.school != null">
        school = #{record.school,jdbcType=VARCHAR},
      </if>
      <if test="record.bloodType != null">
        blood_type = #{record.bloodType,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=BIGINT},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modified != null">
        modified = #{record.modified,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_info
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      sex = #{record.sex,jdbcType=INTEGER},
      real_name = #{record.realName,jdbcType=VARCHAR},
      birth_date = #{record.birthDate,jdbcType=TIMESTAMP},
      id_card = #{record.idCard,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      mark = #{record.mark,jdbcType=INTEGER},
      school = #{record.school,jdbcType=VARCHAR},
      blood_type = #{record.bloodType,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      creator = #{record.creator,jdbcType=BIGINT},
      created = #{record.created,jdbcType=TIMESTAMP},
      modified = #{record.modified,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ichaoge.pet.domain.entity.UserInfo">
    update user_info
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="birthDate != null">
        birth_date = #{birthDate,jdbcType=TIMESTAMP},
      </if>
      <if test="idCard != null">
        id_card = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="mark != null">
        mark = #{mark,jdbcType=INTEGER},
      </if>
      <if test="school != null">
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="bloodType != null">
        blood_type = #{bloodType,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=BIGINT},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="modified != null">
        modified = #{modified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ichaoge.pet.domain.entity.UserInfo">
    update user_info
    set user_id = #{userId,jdbcType=BIGINT},
      sex = #{sex,jdbcType=INTEGER},
      real_name = #{realName,jdbcType=VARCHAR},
      birth_date = #{birthDate,jdbcType=TIMESTAMP},
      id_card = #{idCard,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      mark = #{mark,jdbcType=INTEGER},
      school = #{school,jdbcType=VARCHAR},
      blood_type = #{bloodType,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      creator = #{creator,jdbcType=BIGINT},
      created = #{created,jdbcType=TIMESTAMP},
      modified = #{modified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.ichaoge.pet.domain.entity.UserInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="birth_date" jdbcType="TIMESTAMP" property="birthDate" />
    <result column="id_card" jdbcType="VARCHAR" property="idCard" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="mark" jdbcType="INTEGER" property="mark" />
    <result column="school" jdbcType="VARCHAR" property="school" />
    <result column="blood_type" jdbcType="VARCHAR" property="bloodType" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="creator" jdbcType="BIGINT" property="creator" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="modified" jdbcType="TIMESTAMP" property="modified" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, sex, real_name, birth_date, id_card, address, mark, school, blood_type, 
    status, creator, created, modified
  </sql>
  <select id="selectByExample" parameterType="com.ichaoge.pet.domain.entity.UserInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ichaoge.pet.domain.entity.UserInfoExample">
    delete from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ichaoge.pet.domain.entity.UserInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_info (user_id, sex, real_name, 
      birth_date, id_card, address, 
      mark, school, blood_type, 
      status, creator, created, 
      modified)
    values (#{userId,jdbcType=BIGINT}, #{sex,jdbcType=INTEGER}, #{realName,jdbcType=VARCHAR}, 
      #{birthDate,jdbcType=TIMESTAMP}, #{idCard,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{mark,jdbcType=INTEGER}, #{school,jdbcType=VARCHAR}, #{bloodType,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{creator,jdbcType=BIGINT}, #{created,jdbcType=TIMESTAMP}, 
      #{modified,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ichaoge.pet.domain.entity.UserInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="birthDate != null">
        birth_date,
      </if>
      <if test="idCard != null">
        id_card,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="mark != null">
        mark,
      </if>
      <if test="school != null">
        school,
      </if>
      <if test="bloodType != null">
        blood_type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="modified != null">
        modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="birthDate != null">
        #{birthDate,jdbcType=TIMESTAMP},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="mark != null">
        #{mark,jdbcType=INTEGER},
      </if>
      <if test="school != null">
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="bloodType != null">
        #{bloodType,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=BIGINT},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="modified != null">
        #{modified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ichaoge.pet.domain.entity.UserInfoExample" resultType="java.lang.Integer">
    select count(*) from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.realName != null">
        real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.birthDate != null">
        birth_date = #{record.birthDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.idCard != null">
        id_card = #{record.idCard,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.mark != null">
        mark = #{record.mark,jdbcType=INTEGER},
      </if>
      <if test="record.school != null">
        school = #{record.school,jdbcType=VARCHAR},
      </if>
      <if test="record.bloodType != null">
        blood_type = #{record.bloodType,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=BIGINT},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modified != null">
        modified = #{record.modified,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_info
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      sex = #{record.sex,jdbcType=INTEGER},
      real_name = #{record.realName,jdbcType=VARCHAR},
      birth_date = #{record.birthDate,jdbcType=TIMESTAMP},
      id_card = #{record.idCard,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      mark = #{record.mark,jdbcType=INTEGER},
      school = #{record.school,jdbcType=VARCHAR},
      blood_type = #{record.bloodType,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      creator = #{record.creator,jdbcType=BIGINT},
      created = #{record.created,jdbcType=TIMESTAMP},
      modified = #{record.modified,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ichaoge.pet.domain.entity.UserInfo">
    update user_info
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="birthDate != null">
        birth_date = #{birthDate,jdbcType=TIMESTAMP},
      </if>
      <if test="idCard != null">
        id_card = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="mark != null">
        mark = #{mark,jdbcType=INTEGER},
      </if>
      <if test="school != null">
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="bloodType != null">
        blood_type = #{bloodType,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=BIGINT},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="modified != null">
        modified = #{modified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ichaoge.pet.domain.entity.UserInfo">
    update user_info
    set user_id = #{userId,jdbcType=BIGINT},
      sex = #{sex,jdbcType=INTEGER},
      real_name = #{realName,jdbcType=VARCHAR},
      birth_date = #{birthDate,jdbcType=TIMESTAMP},
      id_card = #{idCard,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      mark = #{mark,jdbcType=INTEGER},
      school = #{school,jdbcType=VARCHAR},
      blood_type = #{bloodType,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      creator = #{creator,jdbcType=BIGINT},
      created = #{created,jdbcType=TIMESTAMP},
      modified = #{modified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>